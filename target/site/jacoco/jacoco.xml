<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="stars"><sessioninfo id="Matts-Computer-4ac3e413" start="1611804594657" dump="1611804596683"/><sessioninfo id="Matts-Computer-f07b4827" start="1611804645872" dump="1611804647138"/><sessioninfo id="Matts-Computer-ae1dfd78" start="1611805295945" dump="1611805297766"/><sessioninfo id="Matts-Computer-a5bd76b6" start="1611948216118" dump="1611948217906"/><sessioninfo id="Matts-Computer-73a51ffb" start="1612028320060" dump="1612028321520"/><sessioninfo id="Matts-Computer-679f5cf5" start="1612028651186" dump="1612028653241"/><sessioninfo id="Matts-Computer-9bda7b83" start="1612028905363" dump="1612028906478"/><sessioninfo id="Matts-Computer-b7030854" start="1612034573754" dump="1612034575558"/><sessioninfo id="Matts-Computer-676e38d3" start="1612041365430" dump="1612041366460"/><sessioninfo id="Matts-Computer-bab79c30" start="1612041479647" dump="1612041480691"/><sessioninfo id="Matts-Computer-3376455d" start="1612042162590" dump="1612042163866"/><sessioninfo id="Matts-Computer-1884a717" start="1612042246439" dump="1612042247454"/><sessioninfo id="Matts-Computer-4ff9f2ca" start="1612042281435" dump="1612042282360"/><sessioninfo id="Matts-Computer-391c78f0" start="1612043004605" dump="1612043005787"/><sessioninfo id="Matts-Computer-63a0afb4" start="1612043300645" dump="1612043302355"/><sessioninfo id="Matts-Computer-9b3ef958" start="1612043880828" dump="1612043882172"/><sessioninfo id="Matts-Computer-e824f34e" start="1612044511840" dump="1612044513652"/><sessioninfo id="Matts-Computer-2da38b5" start="1612045159277" dump="1612045160903"/><sessioninfo id="Matts-Computer-afc5b75b" start="1612046562705" dump="1612046563897"/><sessioninfo id="Matts-Computer-18c94235" start="1612063537230" dump="1612063541872"/><sessioninfo id="Matts-Computer-8efb5379" start="1612063639427" dump="1612063644237"/><sessioninfo id="Matts-Computer-66bed5f8" start="1612066173326" dump="1612066177274"/><sessioninfo id="Matts-Computer-dbd74cf0" start="1612069162777" dump="1612069164725"/><sessioninfo id="Matts-Computer-15ad9c6c" start="1612071184809" dump="1612071187988"/><sessioninfo id="Matts-Computer-cc23860e" start="1612071259131" dump="1612071261323"/><sessioninfo id="Matts-Computer-3cf20bdd" start="1612071357716" dump="1612071359460"/><sessioninfo id="Matts-Computer-840d35e0" start="1612071503506" dump="1612071505828"/><sessioninfo id="Matts-Computer-ffa0b917" start="1612071747945" dump="1612071749926"/><sessioninfo id="Matts-Computer-e1cdcc0a" start="1612071802131" dump="1612071804617"/><sessioninfo id="Matts-Computer-675bade2" start="1612072389949" dump="1612072393433"/><sessioninfo id="Matts-Computer-eb6c30e1" start="1612072459521" dump="1612072461505"/><sessioninfo id="Matts-Computer-9e11463c" start="1612072650456" dump="1612072652347"/><sessioninfo id="Matts-Computer-89242c76" start="1612072720056" dump="1612072721806"/><sessioninfo id="Matts-Computer-af35bd32" start="1612072808709" dump="1612072811401"/><sessioninfo id="Matts-Computer-cbe7789" start="1612072880681" dump="1612072882573"/><sessioninfo id="Matts-Computer-f213fb9d" start="1612073421166" dump="1612073424279"/><sessioninfo id="Matts-Computer-729adae6" start="1612073649916" dump="1612073653179"/><sessioninfo id="Matts-Computer-d1b78a3e" start="1612073703446" dump="1612073706832"/><sessioninfo id="Matts-Computer-eb65941c" start="1612073878570" dump="1612073881629"/><sessioninfo id="Matts-Computer-48036413" start="1612074562027" dump="1612074564822"/><sessioninfo id="Matts-Computer-81cacc28" start="1612074627459" dump="1612074630992"/><sessioninfo id="Matts-Computer-17623cd6" start="1612074739382" dump="1612074741332"/><sessioninfo id="Matts-Computer-a1e40202" start="1612074795011" dump="1612074798233"/><sessioninfo id="Matts-Computer-de2c3bac" start="1612075059902" dump="1612075062933"/><sessioninfo id="Matts-Computer-cb9b2496" start="1612075281320" dump="1612075283689"/><sessioninfo id="Matts-Computer-ef78cc55" start="1612075340035" dump="1612075343068"/><sessioninfo id="Matts-Computer-ac995a16" start="1612075590878" dump="1612075594324"/><sessioninfo id="Matts-Computer-b1b063ed" start="1612075666536" dump="1612075668815"/><sessioninfo id="Matts-Computer-3bfa50a3" start="1612075837359" dump="1612075840685"/><sessioninfo id="Matts-Computer-934f43c8" start="1612075918617" dump="1612075920563"/><sessioninfo id="Matts-Computer-6ab56007" start="1612076100772" dump="1612076104968"/><sessioninfo id="Matts-Computer-56a246d3" start="1612076401863" dump="1612076404454"/><sessioninfo id="Matts-Computer-426d66d3" start="1612076894388" dump="1612076896148"/><sessioninfo id="Matts-Computer-2fd40d8b" start="1612104674276" dump="1612104677020"/><sessioninfo id="Matts-Computer-2ad5fdc1" start="1612104806412" dump="1612104809357"/><sessioninfo id="Matts-Computer-f5acd5ab" start="1612106800887" dump="1612106805041"/><sessioninfo id="Matts-Computer-531a288e" start="1612106891700" dump="1612106894728"/><sessioninfo id="Matts-Computer-e2a691f8" start="1612107172180" dump="1612107174938"/><sessioninfo id="Matts-Computer-e81acc31" start="1612107258382" dump="1612107262372"/><sessioninfo id="Matts-Computer-a9941a7f" start="1612107600649" dump="1612107602708"/><sessioninfo id="Matts-Computer-9a2f3839" start="1612107665044" dump="1612107668069"/><sessioninfo id="Matts-Computer-96fe013c" start="1612107737959" dump="1612107739660"/><sessioninfo id="Matts-Computer-69327277" start="1612107862972" dump="1612107865056"/><sessioninfo id="Matts-Computer-aba66e58" start="1612108104533" dump="1612108106411"/><sessioninfo id="Matts-Computer-9659e8e7" start="1612108262047" dump="1612108264584"/><sessioninfo id="Matts-Computer-f7e32894" start="1612108298067" dump="1612108300304"/><sessioninfo id="Matts-Computer-84435aa0" start="1612108557745" dump="1612108560362"/><sessioninfo id="Matts-Computer-e2fe20c2" start="1612108621408" dump="1612108623905"/><sessioninfo id="Matts-Computer-785a9a04" start="1612108670537" dump="1612108672538"/><sessioninfo id="Matts-Computer-324a77df" start="1612108698912" dump="1612108701538"/><sessioninfo id="Matts-Computer-577eba3f" start="1612108733086" dump="1612108735041"/><sessioninfo id="Matts-Computer-c40cb7b3" start="1612108751270" dump="1612108752881"/><sessioninfo id="Matts-Computer-90a223f4" start="1612108822895" dump="1612108824785"/><sessioninfo id="Matts-Computer-a6072a2b" start="1612108884002" dump="1612108886420"/><sessioninfo id="Matts-Computer-de8cfdcc" start="1612108919357" dump="1612108921223"/><sessioninfo id="Matts-Computer-2663cd34" start="1612108947777" dump="1612108950010"/><sessioninfo id="Matts-Computer-12c52654" start="1612110439628" dump="1612110441899"/><sessioninfo id="Matts-Computer-eea95035" start="1612110987795" dump="1612110989534"/><sessioninfo id="Matts-Computer-24464d13" start="1612111084699" dump="1612111086953"/><sessioninfo id="Matts-Computer-80cad711" start="1612111194283" dump="1612111196185"/><sessioninfo id="Matts-Computer-cb3992b5" start="1612111290181" dump="1612111292282"/><sessioninfo id="Matts-Computer-75f42196" start="1612111487820" dump="1612111491295"/><sessioninfo id="Matts-Computer-604c4dc0" start="1612111927368" dump="1612111929260"/><sessioninfo id="Matts-Computer-da69282c" start="1612112062280" dump="1612112065042"/><sessioninfo id="Matts-Computer-e48aa9d0" start="1612112098518" dump="1612112101124"/><sessioninfo id="Matts-Computer-51cf074b" start="1612113586374" dump="1612113588586"/><sessioninfo id="Matts-Computer-47affc72" start="1612113756301" dump="1612113759166"/><sessioninfo id="Matts-Computer-63843509" start="1612113923910" dump="1612113926742"/><sessioninfo id="Matts-Computer-7dad838d" start="1612114303223" dump="1612114305510"/><sessioninfo id="Matts-Computer-f0d5d06b" start="1612114378508" dump="1612114382145"/><sessioninfo id="Matts-Computer-6b7f8eff" start="1612114508436" dump="1612114511166"/><sessioninfo id="Matts-Computer-959c43" start="1612114751239" dump="1612114754697"/><sessioninfo id="Matts-Computer-c36e76db" start="1612114837224" dump="1612114839214"/><sessioninfo id="Matts-Computer-e3446ab2" start="1612114945282" dump="1612114949085"/><sessioninfo id="Matts-Computer-6e4c646a" start="1612114988371" dump="1612114991971"/><sessioninfo id="Matts-Computer-6ece0150" start="1612115131914" dump="1612115133891"/><sessioninfo id="Matts-Computer-fd227b1" start="1612115253379" dump="1612115255948"/><sessioninfo id="Matts-Computer-28a437e2" start="1612115330164" dump="1612115332245"/><sessioninfo id="Matts-Computer-18946b96" start="1612115423919" dump="1612115426809"/><sessioninfo id="Matts-Computer-b8898f26" start="1612115722568" dump="1612115724349"/><sessioninfo id="Matts-Computer-9519ea98" start="1612115841335" dump="1612115844698"/><sessioninfo id="Matts-Computer-f8494e8d" start="1612116374293" dump="1612116377593"/><sessioninfo id="Matts-Computer-9f7ca892" start="1612117145312" dump="1612117147253"/><sessioninfo id="Matts-Computer-bdaf26a9" start="1612117581530" dump="1612117583345"/><sessioninfo id="Matts-Computer-417e2b1c" start="1612117858335" dump="1612117861571"/><sessioninfo id="Matts-Computer-44112e24" start="1612118659777" dump="1612118661681"/><sessioninfo id="Matts-Computer-91df9d76" start="1612119387348" dump="1612119390606"/><sessioninfo id="Matts-Computer-ffb1fd65" start="1612120199608" dump="1612120202224"/><sessioninfo id="Matts-Computer-76997c61" start="1612120381559" dump="1612120383300"/><sessioninfo id="Matts-Computer-e7f6ce1b" start="1612120720429" dump="1612120723004"/><sessioninfo id="Matts-Computer-3dcae670" start="1612121103415" dump="1612121106709"/><sessioninfo id="Matts-Computer-3ca2ff46" start="1612121267235" dump="1612121269761"/><sessioninfo id="Matts-Computer-db7474b" start="1612121369509" dump="1612121371354"/><package name="edu/brown/cs/student/command"><class name="edu/brown/cs/student/command/Command" sourcefilename="Command.java"/><class name="edu/brown/cs/student/command/REPLRunner" sourcefilename="REPLRunner.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="()V" line="54"><counter type="INSTRUCTION" missed="87" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="149" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="REPLRunner.java"><line nr="27" mi="5" ci="0" mb="0" cb="0"/><line nr="32" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="15" ci="0" mb="0" cb="0"/><line nr="38" mi="12" ci="0" mb="0" cb="0"/><line nr="39" mi="12" ci="0" mb="0" cb="0"/><line nr="40" mi="8" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="9" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="2" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="2" cb="0"/><line nr="69" mi="6" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="2" cb="0"/><line nr="76" mi="6" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="10" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="149" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Command.java"/><counter type="INSTRUCTION" missed="149" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><package name="edu/brown/cs/student/csvParse"><class name="edu/brown/cs/student/csvParse/CSVParser" sourcefilename="CSVParser.java"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Ljava/lang/String;Ljava/util/ArrayList;[Ljava/lang/String;Ledu/brown/cs/student/csvParse/LineConverter;)Z" line="45"><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="81" covered="3"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="24" covered="2"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/brown/cs/student/csvParse/LineConverter" sourcefilename="LineConverter.java"/><sourcefile name="LineConverter.java"/><sourcefile name="CSVParser.java"><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="2" cb="0"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="2" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="64" mi="5" ci="0" mb="2" cb="0"/><line nr="65" mi="7" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="10" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="81" covered="3"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="24" covered="2"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="81" covered="3"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="24" covered="2"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></package><package name="edu/brown/cs/student/validations"><class name="edu/brown/cs/student/validations/StringValFunctions" sourcefilename="StringValFunctions.java"><method name="isNumeric" desc="(Ljava/lang/String;)Ljava/lang/Boolean;" line="16"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInteger" desc="(Ljava/lang/String;)Ljava/lang/Boolean;" line="31"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isName" desc="(Ljava/lang/String;)Ljava/lang/Boolean;" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pass" desc="(Ljava/lang/String;)Ljava/lang/Boolean;" line="55"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNonNegative" desc="(Ljava/lang/String;)Ljava/lang/Boolean;" line="65"><counter type="INSTRUCTION" missed="1" covered="14"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="42"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/brown/cs/student/validations/StringValidation" sourcefilename="StringValidation.java"/><class name="edu/brown/cs/student/validations/ArgsValidator" sourcefilename="ArgsValidator.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/Map;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testArgs" desc="(Ljava/util/ArrayList;)Ljava/util/Optional;" line="47"><counter type="INSTRUCTION" missed="19" covered="46"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="5" covered="8"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testArgsWithReq" desc="(Ljava/util/ArrayList;Ledu/brown/cs/student/validations/ArgsInformation;)Ljava/lang/String;" line="79"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="110"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="5" covered="26"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/brown/cs/student/validations/ArgsInformation" sourcefilename="ArgsInformation.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;[Ljava/lang/String;[Ledu/brown/cs/student/validations/StringValidation;[Ljava/lang/String;)V" line="44"><counter type="INSTRUCTION" missed="5" covered="31"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUniqueName" desc="()Ljava/lang/String;" line="62"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArgsFormat" desc="()[Ljava/lang/String;" line="71"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRequirements" desc="()[Ledu/brown/cs/student/validations/StringValidation;" line="80"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getErrorMessages" desc="()[Ljava/lang/String;" line="89"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="49"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="StringValidation.java"/><sourcefile name="ArgsValidator.java"><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="1" cb="1"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="2" ci="14" mb="1" cb="1"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="1" cb="1"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="5" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="2"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="2"/><line nr="92" mi="0" ci="7" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="2"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="110"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="5" covered="26"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArgsInformation.java"><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="10" mb="2" cb="2"/><line nr="47" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="49"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringValFunctions.java"><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="1" ci="14" mb="2" cb="2"/><counter type="INSTRUCTION" missed="1" covered="42"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="25" covered="201"/><counter type="BRANCH" missed="7" covered="13"/><counter type="LINE" missed="6" covered="48"/><counter type="COMPLEXITY" missed="7" covered="16"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="3"/></package><package name="edu/brown/cs/student/people"><class name="edu/brown/cs/student/people/MockCSV" sourcefilename="MockCSV.java"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="88"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/util/ArrayList;)V" line="68"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchArgsToMethod" desc="(Ljava/util/ArrayList;)Ljava/util/Optional;" line="89"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lineToPerson" desc="(Ljava/lang/String;)Ledu/brown/cs/student/people/MockPerson;" line="99"><counter type="INSTRUCTION" missed="5" covered="43"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="40" covered="136"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="10" covered="19"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/brown/cs/student/people/MockPerson" sourcefilename="MockPerson.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="35"><counter type="INSTRUCTION" missed="5" covered="268"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="34"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formatEmpty" desc="(Ljava/lang/String;)Ljava/lang/String;" line="100"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="110"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMockDate" desc="(Ljava/lang/String;)Ljava/lang/Boolean;" line="143"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMockDateInRage" desc="(Ljava/lang/String;)Ljava/lang/Boolean;" line="155"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMockEmail" desc="(Ljava/lang/String;)Ljava/lang/Boolean;" line="173"><counter type="INSTRUCTION" missed="1" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMockStreetAddress" desc="(Ljava/lang/String;)Ljava/lang/Boolean;" line="184"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="393"/><counter type="BRANCH" missed="4" covered="20"/><counter type="LINE" missed="1" covered="54"/><counter type="COMPLEXITY" missed="4" covered="15"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="MockCSV.java"><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="28" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="31" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="2" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="9" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="2" cb="0"/><line nr="76" mi="8" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="1" cb="1"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="40" covered="136"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="10" covered="19"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MockPerson.java"><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="96" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="7" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="1" cb="1"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="7" mb="0" cb="2"/><line nr="110" mi="0" ci="8" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="8" mb="0" cb="0"/><line nr="123" mi="0" ci="8" mb="0" cb="0"/><line nr="124" mi="0" ci="8" mb="0" cb="0"/><line nr="125" mi="0" ci="8" mb="0" cb="0"/><line nr="126" mi="0" ci="8" mb="0" cb="0"/><line nr="127" mi="0" ci="8" mb="0" cb="0"/><line nr="128" mi="0" ci="8" mb="0" cb="0"/><line nr="129" mi="0" ci="8" mb="0" cb="0"/><line nr="130" mi="0" ci="8" mb="0" cb="0"/><line nr="131" mi="0" ci="8" mb="0" cb="0"/><line nr="132" mi="0" ci="8" mb="0" cb="0"/><line nr="133" mi="0" ci="8" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="12" mb="0" cb="4"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="8" mb="0" cb="0"/><line nr="161" mi="0" ci="12" mb="0" cb="4"/><line nr="162" mi="0" ci="14" mb="1" cb="3"/><line nr="173" mi="0" ci="7" mb="0" cb="2"/><line nr="174" mi="1" ci="4" mb="1" cb="1"/><line nr="184" mi="0" ci="7" mb="1" cb="1"/><line nr="185" mi="0" ci="5" mb="0" cb="2"/><counter type="INSTRUCTION" missed="6" covered="393"/><counter type="BRANCH" missed="4" covered="20"/><counter type="LINE" missed="1" covered="54"/><counter type="COMPLEXITY" missed="4" covered="15"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="46" covered="529"/><counter type="BRANCH" missed="9" covered="21"/><counter type="LINE" missed="11" covered="73"/><counter type="COMPLEXITY" missed="8" covered="18"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="2"/></package><package name="edu/brown/cs/student/stars"><class name="edu/brown/cs/student/stars/Star" sourcefilename="Star.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="33"><counter type="INSTRUCTION" missed="5" covered="150"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;DDD)V" line="33"><counter type="INSTRUCTION" missed="0" covered="109"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distanceTo" desc="(DDD)D" line="106"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="119"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStarID" desc="()Ljava/lang/String;" line="128"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getX" desc="()D" line="137"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getY" desc="()D" line="146"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getZ" desc="()D" line="155"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="164"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="305"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="36"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/brown/cs/student/stars/Main" sourcefilename="Main.java"><method name="main" desc="([Ljava/lang/String;)V" line="37"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/String;)V" line="42"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="()V" line="48"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createEngine" desc="()Lspark/template/freemarker/FreeMarkerEngine;" line="64"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runSparkServer" desc="(I)V" line="77"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="104" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/brown/cs/student/stars/NaiveNeighbors" sourcefilename="NaiveNeighbors.java"><method name="&lt;init&gt;" desc="(Ljava/util/ArrayList;Ljava/lang/StringBuilder;)V" line="42"><counter type="INSTRUCTION" missed="142" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="146"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/util/ArrayList;)V" line="99"><counter type="INSTRUCTION" missed="107" covered="0"/><counter type="BRANCH" missed="7" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchArgsToMethod" desc="(Ljava/util/ArrayList;)Ljava/util/Optional;" line="141"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="performNaiveNeighbors" desc="(ILjava/lang/String;Ljava/util/ArrayList;)Ljava/util/ArrayList;" line="153"><counter type="INSTRUCTION" missed="21" covered="41"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="10"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="performNaiveNeighbors" desc="(IDDDLjava/util/ArrayList;)Ljava/util/ArrayList;" line="191"><counter type="INSTRUCTION" missed="2" covered="133"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="1" covered="25"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNonNegInt" desc="(Ljava/lang/String;)Z" line="254"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$performNaiveNeighbors$1" desc="(DDDLedu/brown/cs/student/stars/Star;)D" line="196"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$performNaiveNeighbors$0" desc="(Ljava/lang/String;Ledu/brown/cs/student/stars/Star;)Z" line="172"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="273" covered="349"/><counter type="BRANCH" missed="13" covered="20"/><counter type="LINE" missed="33" covered="46"/><counter type="COMPLEXITY" missed="12" covered="14"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/brown/cs/student/stars/Main$ExceptionPrinter" sourcefilename="Main.java"><method name="handle" desc="(Ljava/lang/Exception;Lspark/Request;Lspark/Response;)V" line="105"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/brown/cs/student/stars/StarsUtilities" sourcefilename="StarsUtilities.java"><method name="findStarWithName" desc="(Ljava/lang/String;Ljava/util/ArrayList;)Ljava/util/Optional;" line="19"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findStarsWithCord" desc="(DDDLjava/util/ArrayList;)Ljava/util/ArrayList;" line="37"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyWithType" desc="(Ljava/util/ArrayList;)Ljava/util/ArrayList;" line="54"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/brown/cs/student/stars/UpdateStarFile" sourcefilename="UpdateStarFile.java"><method name="&lt;init&gt;" desc="(Ljava/util/ArrayList;Ljava/lang/StringBuilder;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="85"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/util/ArrayList;)V" line="76"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchArgsToMethod" desc="(Ljava/util/ArrayList;)Ljava/util/Optional;" line="103"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lineToStar" desc="(Ljava/lang/String;)Ledu/brown/cs/student/stars/Star;" line="113"><counter type="INSTRUCTION" missed="5" covered="27"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="69" covered="117"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="14" covered="13"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/brown/cs/student/stars/NaiveRadius" sourcefilename="NaiveRadius.java"><method name="&lt;init&gt;" desc="(Ljava/util/ArrayList;Ljava/lang/StringBuilder;)V" line="40"><counter type="INSTRUCTION" missed="142" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="146"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/util/ArrayList;)V" line="101"><counter type="INSTRUCTION" missed="107" covered="0"/><counter type="BRANCH" missed="7" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchArgsToMethod" desc="(Ljava/util/ArrayList;)Ljava/util/Optional;" line="144"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="performNaiveRadius" desc="(DLjava/lang/String;Ljava/util/ArrayList;)Ljava/util/ArrayList;" line="159"><counter type="INSTRUCTION" missed="21" covered="41"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="10"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="performNaiveRadius" desc="(DDDDLjava/util/ArrayList;)Ljava/util/ArrayList;" line="196"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$performNaiveRadius$2" desc="(DDDLedu/brown/cs/student/stars/Star;)D" line="201"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$performNaiveRadius$1" desc="(DDDDLedu/brown/cs/student/stars/Star;)Z" line="200"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$performNaiveRadius$0" desc="(Ljava/lang/String;Ledu/brown/cs/student/stars/Star;)Z" line="178"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="270" covered="247"/><counter type="BRANCH" missed="9" covered="6"/><counter type="LINE" missed="31" covered="26"/><counter type="COMPLEXITY" missed="8" covered="9"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="edu/brown/cs/student/stars/Main$FrontHandler" sourcefilename="Main.java"><method name="handle" desc="(Lspark/Request;Lspark/Response;)Lspark/ModelAndView;" line="93"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="UpdateStarFile.java"><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="24" mb="0" cb="0"/><line nr="44" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="0" ci="31" mb="0" cb="0"/><line nr="55" mi="0" ci="8" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="2" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="8" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="2" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="89" mi="9" ci="0" mb="0" cb="0"/><line nr="90" mi="17" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="1" cb="1"/><line nr="115" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="19" mb="0" cb="0"/><counter type="INSTRUCTION" missed="69" covered="117"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="14" covered="13"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StarsUtilities.java"><line nr="19" mi="0" ci="10" mb="0" cb="2"/><line nr="20" mi="0" ci="5" mb="0" cb="2"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="10" mb="0" cb="2"/><line nr="39" mi="0" ci="15" mb="1" cb="5"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NaiveRadius.java"><line nr="40" mi="6" ci="6" mb="0" cb="0"/><line nr="41" mi="2" ci="2" mb="0" cb="0"/><line nr="42" mi="47" ci="47" mb="0" cb="0"/><line nr="49" mi="70" ci="70" mb="0" cb="0"/><line nr="66" mi="8" ci="8" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="2" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="1" ci="0" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="2" cb="0"/><line nr="109" mi="1" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="8" ci="0" mb="3" cb="0"/><line nr="116" mi="6" ci="0" mb="0" cb="0"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="8" ci="0" mb="0" cb="0"/><line nr="119" mi="7" ci="0" mb="0" cb="0"/><line nr="120" mi="7" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="123" mi="6" ci="0" mb="0" cb="0"/><line nr="124" mi="6" ci="0" mb="0" cb="0"/><line nr="125" mi="6" ci="0" mb="0" cb="0"/><line nr="126" mi="6" ci="0" mb="0" cb="0"/><line nr="127" mi="9" ci="0" mb="0" cb="0"/><line nr="128" mi="7" ci="0" mb="0" cb="0"/><line nr="129" mi="1" ci="0" mb="0" cb="0"/><line nr="131" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="1" ci="0" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="1" cb="1"/><line nr="160" mi="3" ci="0" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="1" cb="1"/><line nr="167" mi="10" ci="0" mb="0" cb="0"/><line nr="168" mi="4" ci="0" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="10" mb="0" cb="0"/><line nr="180" mi="0" ci="8" mb="0" cb="0"/><line nr="196" mi="0" ci="4" mb="0" cb="2"/><line nr="197" mi="0" ci="7" mb="0" cb="0"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="0" ci="20" mb="0" cb="2"/><line nr="201" mi="0" ci="13" mb="0" cb="0"/><line nr="202" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="270" covered="247"/><counter type="BRANCH" missed="9" covered="6"/><counter type="LINE" missed="31" covered="26"/><counter type="COMPLEXITY" missed="8" covered="9"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Star.java"><line nr="33" mi="0" ci="12" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="166" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="1" cb="1"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="13" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="305"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="36"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NaiveNeighbors.java"><line nr="42" mi="6" ci="6" mb="0" cb="0"/><line nr="43" mi="2" ci="2" mb="0" cb="0"/><line nr="44" mi="47" ci="47" mb="0" cb="0"/><line nr="51" mi="70" ci="70" mb="0" cb="0"/><line nr="67" mi="8" ci="8" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="4" ci="0" mb="2" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="2" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="110" mi="8" ci="0" mb="3" cb="0"/><line nr="112" mi="6" ci="0" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="8" ci="0" mb="0" cb="0"/><line nr="115" mi="7" ci="0" mb="0" cb="0"/><line nr="116" mi="7" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="6" ci="0" mb="0" cb="0"/><line nr="120" mi="6" ci="0" mb="0" cb="0"/><line nr="121" mi="6" ci="0" mb="0" cb="0"/><line nr="122" mi="6" ci="0" mb="0" cb="0"/><line nr="123" mi="7" ci="0" mb="0" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="7" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="1" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="1" cb="1"/><line nr="156" mi="3" ci="0" mb="0" cb="0"/><line nr="157" mi="4" ci="0" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="1" cb="1"/><line nr="162" mi="10" ci="0" mb="0" cb="0"/><line nr="163" mi="4" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="10" mb="0" cb="0"/><line nr="174" mi="0" ci="8" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="0" cb="2"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="13" mb="0" cb="0"/><line nr="200" mi="0" ci="4" mb="0" cb="2"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="0" ci="4" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="0"/><line nr="208" mi="0" ci="11" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="7" mb="1" cb="1"/><line nr="214" mi="0" ci="11" mb="0" cb="2"/><line nr="215" mi="0" ci="2" mb="0" cb="0"/><line nr="216" mi="0" ci="1" mb="0" cb="0"/><line nr="218" mi="0" ci="7" mb="0" cb="0"/><line nr="222" mi="0" ci="8" mb="0" cb="2"/><line nr="223" mi="0" ci="11" mb="0" cb="2"/><line nr="224" mi="0" ci="1" mb="0" cb="0"/><line nr="226" mi="0" ci="7" mb="0" cb="0"/><line nr="232" mi="0" ci="7" mb="1" cb="3"/><line nr="233" mi="2" ci="0" mb="0" cb="0"/><line nr="238" mi="0" ci="4" mb="0" cb="0"/><line nr="239" mi="0" ci="9" mb="0" cb="2"/><line nr="240" mi="0" ci="5" mb="0" cb="0"/><line nr="241" mi="0" ci="7" mb="0" cb="0"/><line nr="244" mi="0" ci="2" mb="0" cb="0"/><line nr="254" mi="1" ci="13" mb="2" cb="2"/><counter type="INSTRUCTION" missed="273" covered="349"/><counter type="BRANCH" missed="13" covered="20"/><counter type="LINE" missed="33" covered="46"/><counter type="COMPLEXITY" missed="12" covered="14"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Main.java"><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="7" ci="0" mb="0" cb="0"/><line nr="51" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><line nr="54" mi="4" ci="0" mb="2" cb="0"/><line nr="55" mi="7" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="10" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="6" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="6" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="140" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="39" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="757" covered="1080"/><counter type="BRANCH" missed="31" covered="39"/><counter type="LINE" missed="118" covered="133"/><counter type="COMPLEXITY" missed="34" covered="43"/><counter type="METHOD" missed="12" covered="29"/><counter type="CLASS" missed="3" covered="5"/></package><counter type="INSTRUCTION" missed="1058" covered="1813"/><counter type="BRANCH" missed="59" covered="73"/><counter type="LINE" missed="191" covered="256"/><counter type="COMPLEXITY" missed="58" covered="78"/><counter type="METHOD" missed="16" covered="53"/><counter type="CLASS" missed="4" covered="11"/></report>